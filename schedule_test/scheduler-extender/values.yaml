prefix: k8s
brand: kube-system
aws_account_id: "xxx"

# We disable scheduler election for testing only
replicaCount: 1
imageVersion: scheduler_extender

prometheus_server_image: quay.io/prometheus/prometheus:v2.1.0
scheduler_default_image: gcr.io/google_containers/kube-scheduler:v1.8.7
scheduler_extender_image: suker200/kube_scheduler_extender:v3 #suker200/kube_scheduler_extender
tier: "control-plane"

service:
  internalPort: 12345

resources:
  scheduler:
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 100m
      memory: 200Mi
  extender:
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 100m
      memory: 200Mi
  prometheus:
    requests:
      cpu: 100m
      memory: 500Mi
    limits:
      cpu: 100m
      memory: 500Mi

initialDelaySeconds: 72
minReadySeconds: 5

scheduler:
  args:
    test_mode: "false"
    role_check: "false"
    threshold:
      cpu: 76
      memory: 76
      load: 2
      cpu_idle: 70
    config:
      prometheus_server: "http://127.0.0.1:9090"

  scheduler_name: custom-scheduler-test

  lock_object_namespace: custom-scheduler-lockobject-test

  # "bindVerb": "bind"  --> temporary disabled 
  scheduler_policy: |-
    {
    "kind" : "Policy",
    "apiVersion" : "v1",
    "predicates" : [
      {"name" : "PodFitsHostPorts"},
      {"name" : "PodFitsResources"},
      {"name" : "NoDiskConflict"},
      {"name" : "NoVolumeZoneConflict"},
      {"name" : "MatchNodeSelector"},
      {"name" : "HostName"},
      {"name" : "MatchInterPodAffinity"},
      {"name" : "PodToleratesNodeTaints"}
      ],
    "priorities" : [
      {"name" : "LeastRequestedPriority", "weight" : 1},
      {"name" : "BalancedResourceAllocation", "weight" : 1},
      {"name" : "ServiceSpreadingPriority", "weight" : 1},
      {"name" : "EqualPriority", "weight" : 1}
      ],
    "extenders": [
      {
        "urlPrefix": "http://127.0.0.1:12345/v1",
        "filterVerb": "scheduler",
        "apiVersion": "v1beta1",
        "weight": 5,
        "nodeCacheCapable": false,
        "enableHttps": false,
        "httpTimeout": 300000000000
      }
    ],
    "hardPodAffinitySymmetricWeight" : 10
    }

prometheus:
  args:
    - --config.file=/prometheus.yml
    - --web.enable-lifecycle
    - --web.enable-admin-api
    - --storage.tsdb.path="/data/"
    - --storage.tsdb.retention=30m

  prometheus_config: |-
    global:
      scrape_interval: 15s 
    scrape_configs:
      - job_name: 'kubernetes-nodes'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - source_labels: [__address__]
            action: replace
            target_label: __metrics_path__
            replacement: /metrics/cadvisor